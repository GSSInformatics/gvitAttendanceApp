package com.Wsdl2Code.WebServices.Users;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 1/6/2015 6:55:51 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Student implements KvmSerializable {
    
    public int currentYear;
    public String regdNumber;
    public String branch;
    public String section;
    public String name;
    
    public Student(){}
    
    public Student(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CurrentYear"))
        {
            Object obj = soapObject.getProperty("CurrentYear");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                currentYear = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                currentYear = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("RegdNumber"))
        {
            Object obj = soapObject.getProperty("RegdNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                regdNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                regdNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("Branch"))
        {
            Object obj = soapObject.getProperty("Branch");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                branch = j.toString();
            }else if (obj!= null && obj instanceof String){
                branch = (String) obj;
            }
        }
        if (soapObject.hasProperty("Section"))
        {
            Object obj = soapObject.getProperty("Section");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                section = j.toString();
            }else if (obj!= null && obj instanceof String){
                section = (String) obj;
            }
        }
        if (soapObject.hasProperty("Name"))
        {
            Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                name = j.toString();
            }else if (obj!= null && obj instanceof String){
                name = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return currentYear;
            case 1:
                return regdNumber;
            case 2:
                return branch;
            case 3:
                return section;
            case 4:
                return name;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CurrentYear";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegdNumber";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Branch";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Section";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Name";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
